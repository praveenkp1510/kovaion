body {
  font-family: "Inter", sans-serif;
  background-color: #171725; /* Dark background for Glassmorphism contrast */
  // padding: 20px;
}

.table-wrapper {
  /* --- Glassmorphism Effect --- */
  background-color: rgba(42, 42, 68, 0.4); /* Dark base, semi-transparent */
  backdrop-filter: blur(15px); /* Frosted glass effect */
  border: 1px solid rgba(255, 255, 255, 0.1); /* Subtle light border */
  /* --------------------------- */
  border-radius: 12px;
  padding: 24px;
  color: #fff;
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37); /* Stronger shadow for depth */
  max-width: 100%;
  margin: 0 auto;
}

.table-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
  flex-wrap: wrap;
  gap: 15px; /* Added gap for better responsiveness */
}

.header-left h2 {
  margin: 0;
  font-size: 22px;
  font-weight: 600;
}
.header-left p {
  margin: 0;
  font-size: 14px;
  color: #c9c9d4;
}

.header-right {
  display: flex;
  gap: 12px;
  align-items: center;
  flex-wrap: wrap;
}

.search-input {
  display: flex;
  align-items: center;
  background-color: rgba(255, 255, 255, 0.1); /* Lighter Glass input */
  border-radius: 8px;
  padding: 8px 12px;
  color: #c9c9d4;
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: all 0.2s;
}

.search-input input {
  border: none;
  background: transparent;
  color: #fff;
  outline: none;
  margin-left: 8px;
  width: 180px;
}

.filter-button,
.add-button {
  border: none;
  padding: 10px 15px;
  border-radius: 8px;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.1s;
  display: flex;
  align-items: center;
  gap: 4px;
}

.filter-button {
  background-color: rgba(255, 255, 255, 0.1);
  color: #fff;
  font-size: 18px;
}

.add-button {
  background: linear-gradient(90deg, #4f46e5, #6366f1);
  color: #fff;
  box-shadow: 0 4px 10px rgba(79, 70, 229, 0.4);
}
.add-button:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 15px rgba(79, 70, 229, 0.6);
}

/* --- Table Styling --- */
.data-table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  table-layout: fixed; /* Ensures columns respect widths on all rows */
}

.data-table th,
.data-table td {
  text-align: left;
  padding: 14px 16px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap; /* Prevent line wrapping */
}

.data-table th:nth-child(1),
.data-table td:nth-child(1) {
  width: 5%;
} /* S.No */
.data-table th:nth-child(2),
.data-table td:nth-child(2) {
  width: 15%;
} /* Name */
.data-table th:nth-child(3),
.data-table td:nth-child(3) {
  width: 10%;
} /* Number */
.data-table th:nth-child(4),
.data-table td:nth-child(4) {
  width: 25%;
} /* Description */
.data-table th:nth-child(5),
.data-table td:nth-child(5) {
  width: 10%;
} /* Status */
.data-table th:nth-child(6),
.data-table td:nth-child(6) {
  width: 10%;
} /* Source */
.data-table th:nth-child(7),
.data-table td:nth-child(7) {
  width: 10%;
} /* Amount */
.data-table th:nth-child(8),
.data-table td:nth-child(8) {
  width: 10%;
} /* Interest */
.data-table th:nth-child(9),
.data-table td:nth-child(9) {
  width: 10%;
} /* Action */

.data-table th {
  font-size: 13px;
  color: #c9c9d4;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.data-table tbody tr {
  transition: background-color 0.15s;
}

.data-table tbody tr:hover {
  background-color: rgba(
    255,
    255,
    255,
    0.05
  ); /* Light hover effect for glass */
}

.data-table td {
  font-size: 14px;
  color: #fff;
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.amount.negative {
  color: #ef4444;
}
.amount.positive {
  color: #22c55e;
}

/* Status Badges */
.status-badge {
  padding: 4px 10px;
  border-radius: 6px;
  font-size: 12px;
  font-weight: 600;
  display: inline-block;
}
.status-badge.blue {
  background-color: rgba(79, 70, 229, 0.2);
  color: #6366f1;
}
.status-badge.yellow {
  background-color: rgba(245, 158, 11, 0.2);
  color: #f59e0b;
}
.status-badge.green {
  background-color: rgba(34, 197, 94, 0.2);
  color: #22c55e;
}
.status-badge.red {
  background-color: rgba(239, 68, 68, 0.2);
  color: #ef4444;
}

.icon-icon {
  width: 20%; /* Explicit size for SVGs */
  height: 20px;
  stroke-width: 2; /* Make the SVG strokes visible */
  color: #c9c9d4; /* Default icon color */
  cursor: pointer;
  transition: color 0.15s;
  margin-left: 2px;
  padding: 2%;
  &:hover {
    color: #6366f1; /* Hover effect */
  }
}

/* --- Functional Pagination Styling --- */
.pagination {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  margin-top: 20px;
  gap: 10px;
}

.page-control {
  background-color: transparent;
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: #fff;
  padding: 8px 10px;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.2s;
  display: flex;
  align-items: center;
}
.page-control:hover:not(.disabled) {
  background-color: rgba(255, 255, 255, 0.1);
}
.page-control.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.page-numbers span {
  display: inline-block;
  width: 32px;
  height: 32px;
  text-align: center;
  line-height: 32px;
  margin: 0 4px;
  border-radius: 6px;
  cursor: pointer;
  color: #c9c9d4;
  font-weight: 500;
  transition: background-color 0.2s, color 0.2s;
}

.page-numbers span:hover:not(.active) {
  background-color: rgba(255, 255, 255, 0.1);
  color: #fff;
}

.page-numbers span.active {
  background-color: #4f46e5;
  color: #fff;
  box-shadow: 0 2px 8px rgba(79, 70, 229, 0.4);
  font-weight: 600;
}

/* Action Icons Styling */
.action-icons {
  display: flex;
  align-items: center;
  gap: 8px;
}
.action-icons .icon {
  // FIX: Explicitly set the icon size in CSS since Tailwind utility classes
  // (like w-5 h-5) are not functional here without the framework.
  width: 20px;
  height: 20px;

  font-size: 18px; /* This property is usually ignored for SVG icons, but was in the original plan */
  cursor: pointer;
  color: #c9c9d4;
  transition: color 0.15s;
}
.action-icons .icon:hover {
  color: #6366f1;
}

// ===================================
// --- RESPONSIVE STYLES (Mobile/Tablet) ---
// ===================================

@media (max-width: 768px) {
  .table-wrapper {
    padding: 15px; // Reduce wrapper padding
  }

  .table-header {
    // Allow the header items (text, search, buttons) to stack
    flex-direction: column;
    align-items: flex-start; // Stack items on the left
    gap: 15px; // Increase gap between header blocks
  }

  .header-right {
    // Allow search/filter/add buttons to wrap themselves
    width: 100%;
    justify-content: space-between;

    .search-input {
      flex-grow: 1; // Allow search to take up available space
      input {
        width: 100%; // Make input fill its container
        min-width: 100px;
      }
    }

    // Ensure buttons don't take up too much space and are flexible
    .filter-button,
    .add-button {
      flex-shrink: 0;
    }
  }

  // --- Crucial for Table Body ---
  // The 'overflow-x-auto' class should be on the wrapper *around* the table in your JSX.
  // We need to make sure the table can scroll horizontally.
  .overflow-x-auto {
    width: 100%;
    overflow-x: auto; /* Enable horizontal scrolling */
    -webkit-overflow-scrolling: touch; /* Better scrolling on iOS */
  }

  .data-table {
    // Remove fixed layout and minimum width for table content.
    table-layout: auto;
    min-width: 800px; /* Give the table a minimum width to enable scrolling */
  }

  .data-table th,
  .data-table td {
    padding: 10px 12px; /* Reduce cell padding */
    // Remove 'white-space: nowrap' from here if you want text to wrap,
    // but typically for tables, horizontal scroll is preferred.
    // If we keep 'white-space: nowrap', the min-width is necessary.
  }

  // Conditionally hide low-priority columns (e.g., Description, Source, Interest)
  .data-table th:nth-child(3),
  .data-table td:nth-child(3), /* Number */
  .data-table th:nth-child(6),
  .data-table td:nth-child(6), /* Source */
  .data-table th:nth-child(8),
  .data-table td:nth-child(8) /* Interest */ {
    display: none;
  }
  // This will make the table narrower, which might prevent the need for scrolling
  // on a tablet, or at least make the scroll shorter on mobile.
}

@media (max-width: 480px) {
  // Further adjustments for very small screens
  .header-right {
    // Stack search/buttons vertically
    flex-direction: column;
    align-items: stretch;

    .search-input {
      width: 100%;
    }

    .filter-button,
    .add-button {
      width: 100%; // Make buttons full width
    }
  }

  // Hide even more columns on a small phone screen
  .data-table th:nth-child(4),
  .data-table td:nth-child(4), /* Description */
  .data-table th:nth-child(7),
  .data-table td:nth-child(7) /* Amount */ {
    display: none;
  }
}
